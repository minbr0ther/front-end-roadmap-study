{"ast":null,"code":"var _jsxFileName = \"/Users/jeongminhyeong/Front-end Roadmap/Front-end-Roadmap-Study/9. React/nwitter by Nomad Coders/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser); //state를 firebase.authService.currentUser에서 읽어와 알 수 있다 true or false\n\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid.refreshUser,\n          updateProfile: args => user.updateProfile(args)\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid.refreshUser,\n      updateProfile: args => user.updateProfile(args)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: init ? /*#__PURE__*/_jsxDEV(AppRouter, {\n      refreshUser: refreshUser,\n      isLoggedIn: isLoggedIn,\n      userObj: userObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : \"Initialiazing...\"\n  }, void 0, false);\n}\n\n_s(App, \"JgIctuvELru8blqaEJdpGzBwYLg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jeongminhyeong/Front-end Roadmap/Front-end-Roadmap-Study/9. React/nwitter by Nomad Coders/src/components/App.jsx"],"names":["useEffect","useState","AppRouter","authService","App","init","setInit","isLoggedIn","setIsLoggedIn","currentUser","userObj","setUserObj","onAuthStateChanged","user","displayName","uid","refreshUser","updateProfile","args"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,OAA5B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACE,WAAW,CAACM,WAAb,CAA5C,CAFa,CAGb;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,WAAW,CAACS,kBAAZ,CAAgCC,IAAD,IAAU;AACvC,UAAIA,IAAJ,EAAU;AACRL,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAG,QAAAA,UAAU,CAAC;AACTG,UAAAA,WAAW,EAAED,IAAI,CAACC,WADT;AAETC,UAAAA,GAAG,EAAEF,IAAI,CAACE,GAAL,CAASC,WAFL;AAGTC,UAAAA,aAAa,EAAGC,IAAD,IAAUL,IAAI,CAACI,aAAL,CAAmBC,IAAnB;AAHhB,SAAD,CAAV;AAKD,OAPD,MAOO;AACLV,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACDF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAZD;AAaD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMU,WAAW,GAAG,MAAM;AACxB,UAAMH,IAAI,GAAGV,WAAW,CAACM,WAAzB;AACAE,IAAAA,UAAU,CAAC;AACTG,MAAAA,WAAW,EAAED,IAAI,CAACC,WADT;AAETC,MAAAA,GAAG,EAAEF,IAAI,CAACE,GAAL,CAASC,WAFL;AAGTC,MAAAA,aAAa,EAAGC,IAAD,IAAUL,IAAI,CAACI,aAAL,CAAmBC,IAAnB;AAHhB,KAAD,CAAV;AAKD,GAPD;;AASA,sBACE;AAAA,cACGb,IAAI,gBACH,QAAC,SAAD;AACE,MAAA,WAAW,EAAEW,WADf;AAEE,MAAA,UAAU,EAAET,UAFd;AAGE,MAAA,OAAO,EAAEG;AAHX;AAAA;AAAA;AAAA;AAAA,YADG,GAOH;AARJ,mBADF;AAcD;;GA5CQN,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  //state를 firebase.authService.currentUser에서 읽어와 알 수 있다 true or false\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid.refreshUser,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid.refreshUser,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initialiazing...\"\n      )}\n      {/* <footer>&copy; Nwitter {new Date().getFullYear()}</footer> */}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}