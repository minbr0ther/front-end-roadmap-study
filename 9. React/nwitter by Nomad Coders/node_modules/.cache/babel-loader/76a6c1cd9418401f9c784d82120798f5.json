{"ast":null,"code":"var _jsxFileName = \"/Users/jeongminhyeong/Front-end Roadmap/Front-end-Roadmap-Study/9. React/nwitter by Nomad Coders/src/routes/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport { authService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  userObj,\n  refreshUser\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    if (userObj.displayName !== newDisplayName) {\n      //이름이 같다면 변경 금지\n      await userObj.updateProfile({\n        displayName: newDisplayName\n      });\n    }\n  }; //   const getMyNweets = async () => {\n  //     const nweets = await dbService\n  //       .collection(\"nweets\")\n  //       .where(\"creatorId\", \"==\", userObj.uid) //DB data filtering\n  //       .orderBy(\"createdAt\")\n  //       .get();\n  //     console.log(nweets.docs.map((doc) => doc.data()));\n  //   };\n  //   useEffect(() => {\n  //     getMyNweets();\n  //   }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"Display name\",\n        value: newDisplayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        placeholder: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLogOutClick,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"1jfk4R6tEsBwxPUraLQj5/toPI0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/jeongminhyeong/Front-end Roadmap/Front-end-Roadmap-Study/9. React/nwitter by Nomad Coders/src/routes/Profile.jsx"],"names":["authService","React","useState","useHistory","Profile","userObj","refreshUser","history","newDisplayName","setNewDisplayName","displayName","onLogOutClick","signOut","push","onChange","event","target","value","onSubmit","preventDefault","updateProfile"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA8B;AAAA;;AAC5C,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAACG,OAAO,CAACK,WAAT,CAApD;;AACA,QAAMC,aAAa,GAAG,MAAM;AAC1BX,IAAAA,WAAW,CAACY,OAAZ;AACAL,IAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFF,KAFJ;AAGAN,IAAAA,iBAAiB,CAACQ,KAAD,CAAjB;AACD,GALD;;AAOA,QAAMC,QAAQ,GAAG,MAAOH,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAId,OAAO,CAACK,WAAR,KAAwBF,cAA5B,EAA4C;AAC1C;AACA,YAAMH,OAAO,CAACe,aAAR,CAAsB;AAC1BV,QAAAA,WAAW,EAAEF;AADa,OAAtB,CAAN;AAGD;AACF,GARD,CAf4C,CAyB5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEU,QAAhB;AAAA,8BACE;AACE,QAAA,QAAQ,EAAEJ,QADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,cAHd;AAIE,QAAA,KAAK,EAAEN;AAJT;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAQ,MAAA,OAAO,EAAEG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAcD,CApDD;;GAAMP,O;UACYD,U;;;KADZC,O;AAsDN,eAAeA,OAAf","sourcesContent":["import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      //이름이 같다면 변경 금지\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n    }\n  };\n\n  //   const getMyNweets = async () => {\n  //     const nweets = await dbService\n  //       .collection(\"nweets\")\n  //       .where(\"creatorId\", \"==\", userObj.uid) //DB data filtering\n  //       .orderBy(\"createdAt\")\n  //       .get();\n  //     console.log(nweets.docs.map((doc) => doc.data()));\n  //   };\n\n  //   useEffect(() => {\n  //     getMyNweets();\n  //   }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n        />\n        <input type=\"submit\" placeholder=\"Update Profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}