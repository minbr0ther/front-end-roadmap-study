{"ast":null,"code":"var _jsxFileName = \"/Users/jeongminhyeong/Front-end Roadmap/Front-end-Roadmap-Study/9. React/nwitter by Nomad Coders/src/routes/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  userObj\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const getMyNweets = async () => {\n    const nweets = await dbService.collection(\"nweets\").where(\"creatorId\", \"==\", userObj.uid) //DB data filtering\n    .orderBy(\"createdAt\").get();\n    console.log(nweets.docs.map(doc => doc.data()));\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Display name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        placeholder: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLogOutClick,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"wlfOWjW/pSHkMeewiQdwf4oF4Vo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/jeongminhyeong/Front-end Roadmap/Front-end-Roadmap-Study/9. React/nwitter by Nomad Coders/src/routes/Profile.jsx"],"names":["authService","dbService","React","useEffect","useState","useHistory","Profile","userObj","history","newDisplayName","setNewDisplayName","displayName","onLogOutClick","signOut","push","onChange","event","target","value","getMyNweets","nweets","collection","where","uid","orderBy","get","console","log","docs","map","doc","data"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC/B,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAACG,OAAO,CAACI,WAAT,CAApD;;AACA,QAAMC,aAAa,GAAG,MAAM;AAC1BZ,IAAAA,WAAW,CAACa,OAAZ;AACAL,IAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFF,KAFJ;AAGAN,IAAAA,iBAAiB,CAACQ,KAAD,CAAjB;AACD,GALD;;AAOA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMC,MAAM,GAAG,MAAMnB,SAAS,CAC3BoB,UADkB,CACP,QADO,EAElBC,KAFkB,CAEZ,WAFY,EAEC,IAFD,EAEOf,OAAO,CAACgB,GAFf,EAEoB;AAFpB,KAGlBC,OAHkB,CAGV,WAHU,EAIlBC,GAJkB,EAArB;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,IAAP,CAAYC,GAAZ,CAAiBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAzB,CAAZ;AACD,GAPD;;AASA5B,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAQ,MAAA,OAAO,EAAEP,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,CArCD;;GAAMN,O;UACYD,U;;;KADZC,O;AAuCN,eAAeA,OAAf","sourcesContent":["import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid) //DB data filtering\n      .orderBy(\"createdAt\")\n      .get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  return (\n    <>\n      <form>\n        <input type=\"text\" placeholder=\"Display name\" />\n        <input type=\"submit\" placeholder=\"Update Profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}